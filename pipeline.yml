---
resource_types:
- name: docker-machine-deploy
  type: docker-image
  source: { repository: tomoram/concourse-docker-deploy }

- name: simple-s3
  type: docker-image
  source:
    repository: 18fgsa/s3-resource-simple
    tag: latest

resources:
- name: github-repository
  type: git
  source:
    uri: git@github.com:tomphp/time-tracker.git
    private_key: {{github_deploy_private_key}}

- name: composer-cache
  type: simple-s3
  source:
    bucket: ci-composer-cache
    access_key_id: {{s3_composer_cache_key}}
    secret_access_key: {{s3_composer_cache_secret}}
    path: time-tracker
    options:
      - "--exclude '*'"
      - "--include 'build-dir/vendor-cache.tgz'"

- name: deployment-image
  type: docker-image
  source:
    repository: tomoram/timetracker
    username: tomoram
    password: {{dockerhub_password}}

- name: testing-server
  type: docker-machine-deploy
  source: &docker-machine-config
    machine_name: do-time-tracker
    ca_key_pem: {{docker_machine_ca_key_pem}}
    ca_pem: {{docker_machine_ca_pem}}
    cert_pem: {{docker_machine_cert_pem}}
    config: {{docker_machine_config}}
    id_rsa: {{docker_machine_id_rsa}}
    id_rsa_pub: {{docker_machine_id_rsa_pub}}
    key_pem: {{docker_machine_key_pem}}
    server_key_pem: {{docker_machine_server_key_pem}}
    server_pem: {{docker_machine_server_pem}}
    compose_file: docker-compose-testing.yml
    compose_root: build-dir
    compose_project_name: tttesting

- name: deploy-server
  type: docker-machine-deploy
  source:
    <<: *docker-machine-config
    compose_file: docker-compose-production.yml
    compose_root: build-dir
    compose_project_name: ttdeploy

jobs:
- name: unit-tests
  public: false
  plan:
  - aggregate:
    - get: github-repository
      trigger: true
    - get: composer-cache
  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
    params: { MODE: development }
  - aggregate:
    - task: run-tests
      file: github-repository/ci/unit-tests.yml
    - put: composer-cache

- name: build-image
  public: false
  plan:
  - aggregate:
    - get: github-repository
      trigger: true
      passed: [unit-tests]
    - get: composer-cache
  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
    params: { MODE: production }
  - put: deployment-image
    params: { build: build-dir }

- name: e2e-tests
  public: false
  serial: true
  plan:
  - aggregate:
    - get: github-repository
      passed: [unit-tests]
    - get: deployment-image
      trigger: true
      passed: [build-image]
    - get: composer-cache

  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
    params: { MODE: developement }

  - put: testing-server

  - task: Run end-to-end tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: tomoram/docker-tools }
      inputs:
      - name: build-dir
      param:
        STORAGE_DRIVER: mysql
        SITE_URL: http://138.68.145.119:9080/
        MYSQL_PORT: 3306
        MYSQL_DBNAME: tracker
        MYSQL_HOSTNAME: 138.68.145.119
        MYSQL_USERNAME: username
        MYSQL_PASSWORD: password
      run:
        dir: build-dir
        path: sh
        args:
        - -exc
        - |
          export STORAGE_DRIVER=mysql

          vendor/bin/phinx migrate -e testing
          vendor/bin/phpunit --testsuite mysql
          vendor/bin/behat -p e2e

- name: deploy
  public: false
  serial: true
  plan:
  - aggregate:
    - get: github-repository
      passed: [e2e-tests]
    - get: deployment-image
      trigger: true
      passed: [e2e-tests]
    - get: composer-cache

  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
    params: { MODE: production }

  - put: deploy-server

  - task: Update the database
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: tomoram/docker-tools
      inputs:
      - name: github-repository
      run:
        dir: github-repository
        path: sh
        args:
        - -exc
        - |
          export DOCKER_MACHINE_NAME=do-time-tracker
          export DOCKER_MACHINE_CA_KEY_PEM={{docker_machine_ca_key_pem}}
          export DOCKER_MACHINE_CA_PEM={{docker_machine_ca_pem}}
          export DOCKER_MACHINE_CERT_PEM={{docker_machine_cert_pem}}
          export DOCKER_MACHINE_CONFIG={{docker_machine_config}}
          export DOCKER_MACHINE_ID_RSA={{docker_machine_id_rsa}}
          export DOCKER_MACHINE_ID_RSA_PUB={{docker_machine_id_rsa_pub}}
          export DOCKER_MACHINE_KEY_PEM={{docker_machine_key_pem}}
          export DOCKER_MACHINE_SERVER_KEY_PEM={{docker_machine_server_key_pem}}
          export DOCKER_MACHINE_SERVER_PEM={{docker_machine_server_pem}}

          env-to-docker-machine
          eval $(docker-machine env --shell bash do-time-tracker)
          #sleep 30 # Wait for sql server
          pwd
          ls
          docker-compose -p ttdeploy -f docker-compose-production.yml run --rm cli vendor/bin/phinx migrate -e production
