---
resources:
- name: github-repository
  type: git
  source:
    uri: git@github.com:tomphp/time-tracker.git
    #skip_ssl_verification: true
    private_key: {{github_deploy_private_key}}

- name: deploy-server
  type: docker-machine-deploy
  source:
    machine_name: do-time-tracker
    ca_key_pem: {{docker_machine_ca_key_pem}}
    ca_pem: {{docker_machine_ca_pem}}
    cert_pem: {{docker_machine_cert_pem}}
    config: {{docker_machine_config}}
    id_rsa: {{docker_machine_id_rsa}}
    id_rsa_pub: {{docker_machine_id_rsa_pub}}
    key_pem: {{docker_machine_key_pem}}
    server_key_pem: {{docker_machine_server_key_pem}}
    server_pem: {{docker_machine_server_pem}}
    compose_file: docker-compose-production.yml
    compose_root: deploy-server

resource_types:
  - name: docker-machine-deploy
    type: docker-image
    source:
      repository: tomoram/concourse-docker-deploy

jobs:
- name: unit-tests
  public: false
  plan:
  - get: github-repository
    trigger: true
  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: tomoram/time-tracker-php}
      inputs:
      - name: build-dir
      run:
        path: build-dir/ci/unit.sh

- name: e2e-tests
  public: false
  serial: true
  plan:
  - get: github-repository
    passed: [unit-tests]
    trigger: true
  - task: composer install
    file: github-repository/ci/composer_install.yml
    privileged: true
  - task: Run end-to-end tests
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: amidos/dcind
      inputs:
        - name: build-dir
      run:
        path: sh
        args:
          - -exc
          - |
            source /docker-lib.sh
            start_docker

            # docker load -i tomphp/time-tracker-php
            # docker images

            cd build-dir
            export STORAGE_DRIVER=mysql

            docker-compose up -d
            docker ps

            sleep 20 # Wait for MySQL to initialise

            docker-compose run --rm cli vendor/bin/phinx migrate -e testing
            docker-compose run --rm cli vendor/bin/phpunit --testsuite mysql
            docker-compose run --rm cli vendor/bin/behat -p e2e

            docker-compose down
            docker volume rm $(docker volume ls -q)

- name: deploy
  public: false
  serial: true
  plan:
  - get: github-repository
    passed: [e2e-tests]
    trigger: true

  - task: Install production dependencies
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: composer/composer
      inputs:
      - name: github-repository
      outputs:
      - name: deploy-server
      run:
        path: sh
        args:
        - -exc
        - |
          git clone github-repository deploy-server
          cd deploy-server
          composer install --no-interaction --no-scripts --no-ansi --no-dev --optimize-autoloader

  - put: deploy-server
